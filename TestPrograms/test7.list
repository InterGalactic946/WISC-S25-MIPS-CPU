    // Initialization
    LLB R1, 0x01      // Load lower byte 0x01 into R1
    LHB R1, 0x00      // Load higher byte 0x00 into R1, R1 = 0x0001
    LLB R2, 0x02      // Load lower byte 0x02 into R2
    LHB R2, 0x00      // Load higher byte 0x00 into R2, R2 = 0x0002
    LLB R3, 0x03      // Load lower byte 0x03 into R3
    LHB R3, 0x00      // Load higher byte 0x00 into R3, R3 = 0x0003
    LLB R6, 0x04      // Load lower byte 0x04 into R6
    LHB R6, 0x00      // Load higher byte 0x00 into R6, R6 = 0x0004

    // EX-to-EX Forwarding Test
    ADD R4, R1, R2    // R4 = R1 + R2 = 0x0003
    SUB R5, R4, R3    // R5 = R4 - R3 = 0x0000 (uses forwarded result from R4)

    // MEM-to-MEM Forwarding Test
    ADD R7, R2, R3    // R7 = R2 + R3 = 0x0005 (result goes to MEM stage)
    SUB R8, R7, R1    // R8 = R7 - R1 = 0x0004 (forwarded from MEM stage)

    // MEM-to-EX Forwarding Test
    ADD R9, R8, R6    // R9 = R8 + R6 = 0x0008 (forwarded from MEM to EX stage)

    // Hazard and Stalling Test
    LLB R10, 0xFF     // Load lower byte 0xFF into R10 (testing negative numbers)
    ADD R11, R9, R10  // R11 = R9 + R10 = 0x0007 (forwarded from EX to EX)
    SUB R12, R11, R1  // R12 = R11 - R1 = 0x0006 (no forwarding needed)

    // Branch Prediction Test - Predicted Taken
    PCS R5            // Save PC to R5 (to test branching)
    B 001, label1     // Conditional branch (expected to be taken)
    HLT               // Should not be executed

    // Branch Prediction Test - Unconditional Jump
    label1:
    BR 111, R6        // Jump to address in R6
    HLT               // Should not be executed

    // Branch Taken - Jump to this location
    ADD R13, R3, R2   // R13 = R3 + R2 = 0x0005
    HLT               // To mark the end

    // Branch Not Taken Scenario
    PCS R7            // Save PC to R7
    B 000, label2     // Conditional branch (expected not to be taken)
    ADD R14, R1, R6   // R14 = R1 + R6 = 0x0005
    HLT

    label2:
    SUB R15, R6, R3   // R15 = R6 - R3 = 0x0001
    HLT
