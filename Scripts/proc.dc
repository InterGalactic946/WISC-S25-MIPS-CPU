###################################
# Read in the verilog files first #
###################################
read_file -format verilog { \
  ../designs/proc.v \
  ../designs/ALU.v \
  ../designs/BHT.v \
  ../designs/BitCell.v \
  ../designs/Branch_Cache.v \
  ../designs/Branch_control.v \
  ../designs/BTB.v \
  ../designs/Cache_Control.v \
  ../designs/Cache.v \
  ../designs/CLA_4bit.v \
  ../designs/CLA_8bit.v \
  ../designs/CLA_16bit.v \
  ../designs/ControlUnit.v \
  ../designs/CPU_Register.v \
  ../designs/DataArray.v \
  ../designs/Decode.v \
  ../designs/Decoder_2_4.v \
  ../designs/Decoder_3_8.v \
  ../designs/Decoder_4_16.v \
  ../designs/Decoder_5_32.v \
  ../designs/Decoder_6_64.v \
  ../designs/dff.v \
  ../designs/DynamicBranchPredictor.v \
  ../designs/EX_MEM_pipe_reg.v \
  ../designs/Execute.v \
  ../designs/Fetch.v \
  ../designs/Flag_Register.v \
  ../designs/ForwardingUnit.v \
  ../designs/HazardDetectionUnit.v \
  ../designs/ID_EX_pipe_reg.v \
  ../designs/IF_ID_pipe_reg.v \
  ../designs/MEM_WB_pipe_reg.v \
  ../designs/memory_system.v \
  ../designs/MetaDataArray.v \
  ../designs/PSA_16bit.v \
  ../designs/RED_Unit.v \
  ../designs/Register.v \
  ../designs/RegisterFile.v \
  ../designs/Shifter.v \
  ../designs/WriteDecoder_3_8.v \
  ../designs/WriteDecoder_4_16.v \
} -autoread -top proc

###################################
# Set Current Design to top level #
###################################
set current_design proc
link
# set_max_area 5000

###########################################
# Define clock and set don't mess with it #
###########################################
# clk with frequency of 400 KHz
create_clock -name "clk" -period 2500 -waveform { 0 1250 } [get_ports clk]
set_false_path -from [get_ports rst]
set compile_delete_unloaded_sequential_cells false
set compile_seqmap_propagate_constants false
set_dont_touch_network [find port clk]
# Set clk uncertainty (skew)
set_clock_uncertainty 0.15 clk

#########################################
# Set input delay & drive on all inputs #
#########################################
set prim_inputs [remove_from_collection [all_inputs] [find port clk]]
set_input_delay -clock clk 0.4 $prim_inputs
set_driving_cell -lib_cell NAND2X2_LVT -library saed32lvt_tt0p85v25c $prim_inputs
set_max_fanout 16 [get_cells -hier *]
# rst goes to many places so don't touch
set_dont_touch_network [find port rst]

##########################################
# Set output delay & load on all outputs #
##########################################
set_output_delay -clock clk 0.5 [all_outputs]
set_load 0.1 [all_outputs]

#############################################################
# Wire load model allows it to estimate internal parasitics #
#############################################################
set_wire_load_model -name 16000 -library saed32lvt_tt0p85v25c

######################################################
# Max transition time is important for Hot-E reasons #
######################################################
set_max_transition 0.1 [current_design]

########################################
# Now actually synthesize for 1st time #
########################################
compile -map_effort medium
check_design

# Unflatten design now that its compiled
set_flatten true
uniquify -force
ungroup -all -flatten
# force hold time to be met for all flops
set_fix_hold clk

# Compile again with higher effort
compile -map_effort high
check_design

####################################################
# Take a look at max & min timings as well as area #
####################################################
report_timing -delay min > ../tests/output/logs/transcript/proc_min_delay.syn.txt
report_timing -delay max > ../tests/output/logs/transcript/proc_max_delay.syn.txt
report_power > ../tests/output/logs/transcript/proc_power.syn.txt
report_area > ../tests/output/logs/transcript/proc_area.syn.txt

########################################################
# Write out resulting synthesized netlist and SDC file #
########################################################
write -format verilog proc -output ../designs/proc.vg
write_sdc ../Scripts/proc.sdc
